# This is the main configuration file for the application.
# This is the main configuration file for the application.
# ~~~~~
  application.serverHost = "0.0.0.0"
  application.serverPort = 9000


  # Secret key
  # ~~~~~
  # The secret key is used to secure cryptographics functions.
  #
  # This must be changed for production, but we recommend not changing it in this file.
  #
  # See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
  play.crypto.secret = "changeme"

  # The application languages
  # ~~~~~
  play.i18n.langs = [ "en" ]


  http.port = disabled
  https.port = 9443
  https.keyStore = ./glanceca.jks
  https.keyStorePassword = 123456
  # play.server.https.keyStore.path - The path to the keystore containing the private key and certificate, if not provided generates a keystore for you
  # play.server.https.keyStore.type - The key store type, defaults to JKS
  # play.server.https.keyStore.password - The password, defaults to a blank password
  # play.server.https.keyStore.algorithm - The key store algorithm, defaults to the platforms default algorithm


  # Router
  # ~~~~~
  # Define the Router object to use for this application.
  # This router will be looked up first when the application is starting up,
  # so make sure this is the entry point.
  # Furthermore, it's assumed your route file is named properly.
  # So for an application router like `my.application.Router`,
  # you may need to define a router file `conf/my.application.routes`.
  # Default to Routes in the root package (and conf/routes)
  # play.http.router = my.application.Routes

  # Database configuration
  # ~~~~~
  # You can declare as many datasources as you want.
  # By convention, the default datasource is named `default`
  #
  # db.default.driver=org.h2.Driver
  # db.default.url="jdbc:h2:mem:play"
  # db.default.username=sa
  # db.default.password=""

  # Evolutions
  # ~~~~~
  # You can disable evolutions if needed
  # play.evolutions.enabled=false

  # You can disable evolutions for a specific datasource if necessary
  # play.evolutions.db.default.enabled=false


//  logger.root=ERROR
//  logger.play=ERROR
//  logger.application=ERROR

  logger.root=DEBUG
  logger.play=DEBUG
  logger.application=DEBUG

  ws.acceptAnyCertificate=true
  amqp.uri="amqp://glance:ciscoglance123456@rabbitmq"
  mongodb.uri = "mongodb://mongo:27017/glance3d"
  mongodb.perNodes = "5"

  mongo-async-driver {
    akka {
      //loglevel = WARNING
      loglevel = ERROR
      log-dead-letters = 10
      log-dead-letters-during-shutdown = on
    }
  }

  akka {
    log-dead-letters = 10
    log-dead-letters-during-shutdown = on
    //loglevel = DEBUG
    loglevel = ERROR
  }

  aes{
    key="kJUFt666NBnxoFnT9QpaFd3D8OWAm7FaG7VMZzZsLXx9Ak0J6xQRPMVL3rLas2tChjeoz0RuoHEeLRtzxNIVsCci4uEHy9oZhU2yaqNf1bvaVgcibF5zhr4cgoD9Cza4"
  }
  session.timeout =600
  amqp{
    uri ="amqp://glance:ciscoglance123456@rabbitmq"
    //uri ="amqp://glance:glance@rabbitmq"
    enabled=true
  }

  memcached.server ="memcached:11211"

  spark{
    uri="https://api.ciscospark.com/v1/messages"
    account="devnetglance@sparkbot.io"
    displayName="Devnet Glance"
    token="MTQxMzg2NjQtYTQyMi00YzU4L45iNzMtMjQ4ODEzYjg5NWUwNjhlZjAxYWMtNGI0"
  }

  timeexpired{
    ipmapping=3
  }

  tropo {
    uri = "https://api.tropo.com/1.0/sessions"
    voiceToken = "0d75332573b596478607850bf0340d96e6dacea3ef8494319a6dbd7fe30754fc016eca1ba1c78927e16a5f10f"
    smsToken = "0d753570025e434db248cf1dac453478ee383d7836531a9186e1602d7d162eb7a6aac1f1c5862a74234a43391"
  }

  //play.modules.enabled += "play.modules.swagger.SwaggerModule"
  //play.modules.enabled += "play.modules.swagger.SwaggerModule"

